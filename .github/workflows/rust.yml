name: Rust build
on: [workflow_dispatch]
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux config
          #- name: linux-amd64
          #  runner: ubuntu-latest
          #  target: x86_64-unknown-linux-gnu
          #  archive: zip
          #  command: cargo
          # Android64 config
          #- name: android-arm
          #  runner: ubuntu-latest
          #  target: aarch64-linux-android
          #  command: cross
          # Android32 config
          - name: android-arm32
            runner: ubuntu-latest
            target: armv7-linux-androideabi
            archive: zip
            command: cross
          - name: Windows
            runner: ubuntu-latest
            target: x86_64-pc-windows-msvc
            archive: zip
            command: cross
    steps: 

        


      - name: Checkout
        uses: actions/checkout@v3
 
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
 
      # Only install cross if we need it
      # Install via cargo-binstall which I found faster
      - name: Install Cross
        if: matrix.command == 'cross'
        shell: bash
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --no-confirm cross
      - name: Build Binary
        
        run: ${{ matrix.command }} build --verbose --release --target ${{ matrix.target }}
      - name: file tree
        run: tree -a
      
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: Android
          name: Android
          body: https://github.com/tdlib/td/tree/${{ matrix.command }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'target/armv7-linux-androideabi/release/libcryptg.so'
